nohup: ignoring input
[INFO] Loading dataset.
[INFO] Splitting.
[INFO] Train shape: (353, 10)
[INFO] Test shape: (89, 10)
[INFO] Finding best model...
[WARNING] [2020-01-11 19:45:59,102:AutoMLSMBO(1)::boston_housing] Could not find meta-data directory /vol/home/s2590433/test1/anaconda3/envs/amlenv/lib/python3.6/site-packages/autosklearn/metalearning/files/r2_regression_dense
[WARNING] [2020-01-11 19:45:59,110:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-11 19:45:59,112:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-11 19:52:32,494:smac.intensification.intensification.Intensifier] Challenger was the same as the current incumbent; Skipping challenger
[WARNING] [2020-01-11 19:52:32,494:smac.intensification.intensification.Intensifier] Challenger was the same as the current incumbent; Skipping challenger
[WARNING] [2020-01-11 19:52:35,443:smac.intensification.intensification.Intensifier] Challenger was the same as the current incumbent; Skipping challenger
[WARNING] [2020-01-11 19:52:35,443:smac.intensification.intensification.Intensifier] Challenger was the same as the current incumbent; Skipping challenger
[WARNING] [2020-01-11 20:10:03,818:smac.intensification.intensification.Intensifier] Challenger was the same as the current incumbent; Skipping challenger
[WARNING] [2020-01-11 20:10:03,818:smac.intensification.intensification.Intensifier] Challenger was the same as the current incumbent; Skipping challenger
[INFO] Elapsed time finding best model: 1807.3864238262177 seconds.


--- MODELS: ---
[(0.260000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'no_encoding', 'imputation:strategy': 'most_frequent', 'preprocessor:__choice__': 'fast_ica', 'regressor:__choice__': 'adaboost', 'rescaling:__choice__': 'robust_scaler', 'preprocessor:fast_ica:algorithm': 'deflation', 'preprocessor:fast_ica:fun': 'logcosh', 'preprocessor:fast_ica:whiten': 'False', 'regressor:adaboost:learning_rate': 0.013782948742521391, 'regressor:adaboost:loss': 'linear', 'regressor:adaboost:max_depth': 5, 'regressor:adaboost:n_estimators': 55, 'rescaling:robust_scaler:q_max': 0.9714721089833791, 'rescaling:robust_scaler:q_min': 0.23238608581444953},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
(0.240000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'one_hot_encoding', 'imputation:strategy': 'mean', 'preprocessor:__choice__': 'polynomial', 'regressor:__choice__': 'adaboost', 'rescaling:__choice__': 'none', 'categorical_encoding:one_hot_encoding:use_minimum_fraction': 'True', 'preprocessor:polynomial:degree': 3, 'preprocessor:polynomial:include_bias': 'False', 'preprocessor:polynomial:interaction_only': 'True', 'regressor:adaboost:learning_rate': 1.727429087716174, 'regressor:adaboost:loss': 'linear', 'regressor:adaboost:max_depth': 9, 'regressor:adaboost:n_estimators': 322, 'categorical_encoding:one_hot_encoding:minimum_fraction': 0.0012178130721041292},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
(0.160000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'no_encoding', 'imputation:strategy': 'median', 'preprocessor:__choice__': 'no_preprocessing', 'regressor:__choice__': 'adaboost', 'rescaling:__choice__': 'normalize', 'regressor:adaboost:learning_rate': 0.8957851123598072, 'regressor:adaboost:loss': 'linear', 'regressor:adaboost:max_depth': 10, 'regressor:adaboost:n_estimators': 416},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
(0.160000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'one_hot_encoding', 'imputation:strategy': 'mean', 'preprocessor:__choice__': 'fast_ica', 'regressor:__choice__': 'adaboost', 'rescaling:__choice__': 'none', 'categorical_encoding:one_hot_encoding:use_minimum_fraction': 'False', 'preprocessor:fast_ica:algorithm': 'parallel', 'preprocessor:fast_ica:fun': 'cube', 'preprocessor:fast_ica:whiten': 'False', 'regressor:adaboost:learning_rate': 0.034680144866839145, 'regressor:adaboost:loss': 'exponential', 'regressor:adaboost:max_depth': 4, 'regressor:adaboost:n_estimators': 242},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
(0.060000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'no_encoding', 'imputation:strategy': 'most_frequent', 'preprocessor:__choice__': 'polynomial', 'regressor:__choice__': 'adaboost', 'rescaling:__choice__': 'normalize', 'preprocessor:polynomial:degree': 2, 'preprocessor:polynomial:include_bias': 'False', 'preprocessor:polynomial:interaction_only': 'False', 'regressor:adaboost:learning_rate': 0.5389966978798247, 'regressor:adaboost:loss': 'exponential', 'regressor:adaboost:max_depth': 10, 'regressor:adaboost:n_estimators': 358},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
(0.060000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'one_hot_encoding', 'imputation:strategy': 'mean', 'preprocessor:__choice__': 'feature_agglomeration', 'regressor:__choice__': 'adaboost', 'rescaling:__choice__': 'minmax', 'categorical_encoding:one_hot_encoding:use_minimum_fraction': 'False', 'preprocessor:feature_agglomeration:affinity': 'manhattan', 'preprocessor:feature_agglomeration:linkage': 'average', 'preprocessor:feature_agglomeration:n_clusters': 158, 'preprocessor:feature_agglomeration:pooling_func': 'median', 'regressor:adaboost:learning_rate': 0.07596367948727878, 'regressor:adaboost:loss': 'square', 'regressor:adaboost:max_depth': 3, 'regressor:adaboost:n_estimators': 494},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
(0.020000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'one_hot_encoding', 'imputation:strategy': 'mean', 'preprocessor:__choice__': 'no_preprocessing', 'regressor:__choice__': 'adaboost', 'rescaling:__choice__': 'minmax', 'categorical_encoding:one_hot_encoding:use_minimum_fraction': 'True', 'regressor:adaboost:learning_rate': 0.03716819861479019, 'regressor:adaboost:loss': 'exponential', 'regressor:adaboost:max_depth': 5, 'regressor:adaboost:n_estimators': 250, 'categorical_encoding:one_hot_encoding:minimum_fraction': 0.02410914425386177},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
(0.020000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'one_hot_encoding', 'imputation:strategy': 'median', 'preprocessor:__choice__': 'polynomial', 'regressor:__choice__': 'adaboost', 'rescaling:__choice__': 'robust_scaler', 'categorical_encoding:one_hot_encoding:use_minimum_fraction': 'False', 'preprocessor:polynomial:degree': 3, 'preprocessor:polynomial:include_bias': 'True', 'preprocessor:polynomial:interaction_only': 'False', 'regressor:adaboost:learning_rate': 0.030840074680839658, 'regressor:adaboost:loss': 'exponential', 'regressor:adaboost:max_depth': 3, 'regressor:adaboost:n_estimators': 266, 'rescaling:robust_scaler:q_max': 0.7141599373138404, 'rescaling:robust_scaler:q_min': 0.11776483354668425},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
(0.020000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'one_hot_encoding', 'imputation:strategy': 'mean', 'preprocessor:__choice__': 'no_preprocessing', 'regressor:__choice__': 'adaboost', 'rescaling:__choice__': 'normalize', 'categorical_encoding:one_hot_encoding:use_minimum_fraction': 'True', 'regressor:adaboost:learning_rate': 0.7198802859514973, 'regressor:adaboost:loss': 'square', 'regressor:adaboost:max_depth': 4, 'regressor:adaboost:n_estimators': 384, 'categorical_encoding:one_hot_encoding:minimum_fraction': 0.00037306667050228826},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
]


--- STATISTICS: ---
auto-sklearn results:
  Dataset name: boston_housing
  Metric: r2
  Best validation score: 0.445763
  Number of target algorithm runs: 384
  Number of successful target algorithm runs: 369
  Number of crashed target algorithm runs: 14
  Number of target algorithms that exceeded the time limit: 1
  Number of target algorithms that exceeded the memory limit: 0



--- SCORE: ---
R2 score 0.495861445096878
