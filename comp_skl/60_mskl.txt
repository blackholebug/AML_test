nohup: ignoring input
[INFO] Loading dataset.
[INFO] Splitting.
[INFO] Train shape: (16512, 8)
[INFO] Test shape: (4128, 8)
[INFO] Finding best model...
[WARNING] [2020-01-12 11:31:38,717:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:31:38,720:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:31:40,723:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:31:42,725:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:31:44,728:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:31:46,730:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:31:48,733:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:31:50,735:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:31:52,738:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:31:54,741:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:31:56,743:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:31:58,746:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:32:00,748:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:32:02,751:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:32:04,753:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:32:06,756:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[INFO] Elapsed time finding best model: 3602.748558998108 seconds.


--- MODELS: ---
[(0.780000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'one_hot_encoding', 'imputation:strategy': 'mean', 'preprocessor:__choice__': 'no_preprocessing', 'regressor:__choice__': 'random_forest', 'rescaling:__choice__': 'standardize', 'categorical_encoding:one_hot_encoding:use_minimum_fraction': 'True', 'regressor:random_forest:bootstrap': 'True', 'regressor:random_forest:criterion': 'mse', 'regressor:random_forest:max_depth': 'None', 'regressor:random_forest:max_features': 1.0, 'regressor:random_forest:max_leaf_nodes': 'None', 'regressor:random_forest:min_impurity_decrease': 0.0, 'regressor:random_forest:min_samples_leaf': 1, 'regressor:random_forest:min_samples_split': 2, 'regressor:random_forest:min_weight_fraction_leaf': 0.0, 'regressor:random_forest:n_estimators': 100, 'categorical_encoding:one_hot_encoding:minimum_fraction': 0.01},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
(0.100000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'one_hot_encoding', 'imputation:strategy': 'most_frequent', 'preprocessor:__choice__': 'fast_ica', 'regressor:__choice__': 'extra_trees', 'rescaling:__choice__': 'robust_scaler', 'categorical_encoding:one_hot_encoding:use_minimum_fraction': 'False', 'preprocessor:fast_ica:algorithm': 'deflation', 'preprocessor:fast_ica:fun': 'exp', 'preprocessor:fast_ica:whiten': 'True', 'regressor:extra_trees:bootstrap': 'False', 'regressor:extra_trees:criterion': 'friedman_mse', 'regressor:extra_trees:max_depth': 'None', 'regressor:extra_trees:max_features': 0.6994393788704474, 'regressor:extra_trees:max_leaf_nodes': 'None', 'regressor:extra_trees:min_impurity_decrease': 0.0, 'regressor:extra_trees:min_samples_leaf': 8, 'regressor:extra_trees:min_samples_split': 11, 'regressor:extra_trees:n_estimators': 100, 'rescaling:robust_scaler:q_max': 0.7671495578317404, 'rescaling:robust_scaler:q_min': 0.247055217993157, 'preprocessor:fast_ica:n_components': 1876},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
(0.080000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'one_hot_encoding', 'imputation:strategy': 'most_frequent', 'preprocessor:__choice__': 'fast_ica', 'regressor:__choice__': 'k_nearest_neighbors', 'rescaling:__choice__': 'standardize', 'categorical_encoding:one_hot_encoding:use_minimum_fraction': 'True', 'preprocessor:fast_ica:algorithm': 'parallel', 'preprocessor:fast_ica:fun': 'cube', 'preprocessor:fast_ica:whiten': 'True', 'regressor:k_nearest_neighbors:n_neighbors': 1, 'regressor:k_nearest_neighbors:p': 1, 'regressor:k_nearest_neighbors:weights': 'distance', 'categorical_encoding:one_hot_encoding:minimum_fraction': 0.000539303865633314, 'preprocessor:fast_ica:n_components': 1594},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
(0.040000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'one_hot_encoding', 'imputation:strategy': 'mean', 'preprocessor:__choice__': 'random_trees_embedding', 'regressor:__choice__': 'k_nearest_neighbors', 'rescaling:__choice__': 'quantile_transformer', 'categorical_encoding:one_hot_encoding:use_minimum_fraction': 'False', 'preprocessor:random_trees_embedding:bootstrap': 'True', 'preprocessor:random_trees_embedding:max_depth': 4, 'preprocessor:random_trees_embedding:max_leaf_nodes': 'None', 'preprocessor:random_trees_embedding:min_samples_leaf': 20, 'preprocessor:random_trees_embedding:min_samples_split': 3, 'preprocessor:random_trees_embedding:min_weight_fraction_leaf': 1.0, 'preprocessor:random_trees_embedding:n_estimators': 79, 'regressor:k_nearest_neighbors:n_neighbors': 33, 'regressor:k_nearest_neighbors:p': 2, 'regressor:k_nearest_neighbors:weights': 'distance', 'rescaling:quantile_transformer:n_quantiles': 164, 'rescaling:quantile_transformer:output_distribution': 'uniform'},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
]


--- STATISTICS: ---
auto-sklearn results:
  Dataset name: boston_housing
  Metric: r2
  Best validation score: 0.805540
  Number of target algorithm runs: 47
  Number of successful target algorithm runs: 37
  Number of crashed target algorithm runs: 0
  Number of target algorithms that exceeded the time limit: 8
  Number of target algorithms that exceeded the memory limit: 2



--- SCORE: ---
R2 score 0.8095256496346245
