nohup: ignoring input
[INFO] Loading dataset.
[INFO] Splitting.
[INFO] Train shape: (16512, 8)
[INFO] Test shape: (4128, 8)
[INFO] Finding best model...
[WARNING] [2020-01-12 11:51:27,741:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:51:27,744:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:51:29,746:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:51:31,751:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:51:33,753:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:51:35,756:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:51:37,759:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:51:39,761:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:51:41,764:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:51:43,766:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:51:45,769:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:51:47,773:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:51:49,775:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:51:51,778:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:51:53,781:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[WARNING] [2020-01-12 11:51:55,783:EnsembleBuilder(1):boston_housing] No models better than random - using Dummy Score!
[INFO] Elapsed time finding best model: 3020.7310523986816 seconds.


--- MODELS: ---
[(0.700000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'one_hot_encoding', 'imputation:strategy': 'mean', 'preprocessor:__choice__': 'no_preprocessing', 'regressor:__choice__': 'random_forest', 'rescaling:__choice__': 'standardize', 'categorical_encoding:one_hot_encoding:use_minimum_fraction': 'True', 'regressor:random_forest:bootstrap': 'True', 'regressor:random_forest:criterion': 'mse', 'regressor:random_forest:max_depth': 'None', 'regressor:random_forest:max_features': 1.0, 'regressor:random_forest:max_leaf_nodes': 'None', 'regressor:random_forest:min_impurity_decrease': 0.0, 'regressor:random_forest:min_samples_leaf': 1, 'regressor:random_forest:min_samples_split': 2, 'regressor:random_forest:min_weight_fraction_leaf': 0.0, 'regressor:random_forest:n_estimators': 100, 'categorical_encoding:one_hot_encoding:minimum_fraction': 0.01},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
(0.140000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'no_encoding', 'imputation:strategy': 'mean', 'preprocessor:__choice__': 'polynomial', 'regressor:__choice__': 'decision_tree', 'rescaling:__choice__': 'minmax', 'preprocessor:polynomial:degree': 2, 'preprocessor:polynomial:include_bias': 'False', 'preprocessor:polynomial:interaction_only': 'True', 'regressor:decision_tree:criterion': 'mse', 'regressor:decision_tree:max_depth_factor': 1.6223161675240791, 'regressor:decision_tree:max_features': 1.0, 'regressor:decision_tree:max_leaf_nodes': 'None', 'regressor:decision_tree:min_impurity_decrease': 0.0, 'regressor:decision_tree:min_samples_leaf': 8, 'regressor:decision_tree:min_samples_split': 12, 'regressor:decision_tree:min_weight_fraction_leaf': 0.0},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
(0.100000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'one_hot_encoding', 'imputation:strategy': 'most_frequent', 'preprocessor:__choice__': 'fast_ica', 'regressor:__choice__': 'decision_tree', 'rescaling:__choice__': 'minmax', 'categorical_encoding:one_hot_encoding:use_minimum_fraction': 'True', 'preprocessor:fast_ica:algorithm': 'deflation', 'preprocessor:fast_ica:fun': 'cube', 'preprocessor:fast_ica:whiten': 'True', 'regressor:decision_tree:criterion': 'mae', 'regressor:decision_tree:max_depth_factor': 1.442208404874114, 'regressor:decision_tree:max_features': 1.0, 'regressor:decision_tree:max_leaf_nodes': 'None', 'regressor:decision_tree:min_impurity_decrease': 0.0, 'regressor:decision_tree:min_samples_leaf': 8, 'regressor:decision_tree:min_samples_split': 5, 'regressor:decision_tree:min_weight_fraction_leaf': 0.0, 'categorical_encoding:one_hot_encoding:minimum_fraction': 0.2091181580483137, 'preprocessor:fast_ica:n_components': 1818},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
(0.040000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'one_hot_encoding', 'imputation:strategy': 'median', 'preprocessor:__choice__': 'fast_ica', 'regressor:__choice__': 'k_nearest_neighbors', 'rescaling:__choice__': 'standardize', 'categorical_encoding:one_hot_encoding:use_minimum_fraction': 'True', 'preprocessor:fast_ica:algorithm': 'parallel', 'preprocessor:fast_ica:fun': 'logcosh', 'preprocessor:fast_ica:whiten': 'False', 'regressor:k_nearest_neighbors:n_neighbors': 1, 'regressor:k_nearest_neighbors:p': 1, 'regressor:k_nearest_neighbors:weights': 'distance', 'categorical_encoding:one_hot_encoding:minimum_fraction': 0.0048218576751606936},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
(0.020000, SimpleRegressionPipeline({'categorical_encoding:__choice__': 'one_hot_encoding', 'imputation:strategy': 'mean', 'preprocessor:__choice__': 'fast_ica', 'regressor:__choice__': 'decision_tree', 'rescaling:__choice__': 'quantile_transformer', 'categorical_encoding:one_hot_encoding:use_minimum_fraction': 'True', 'preprocessor:fast_ica:algorithm': 'parallel', 'preprocessor:fast_ica:fun': 'cube', 'preprocessor:fast_ica:whiten': 'True', 'regressor:decision_tree:criterion': 'mae', 'regressor:decision_tree:max_depth_factor': 1.8535255912277468, 'regressor:decision_tree:max_features': 1.0, 'regressor:decision_tree:max_leaf_nodes': 'None', 'regressor:decision_tree:min_impurity_decrease': 0.0, 'regressor:decision_tree:min_samples_leaf': 12, 'regressor:decision_tree:min_samples_split': 9, 'regressor:decision_tree:min_weight_fraction_leaf': 0.0, 'rescaling:quantile_transformer:n_quantiles': 1294, 'rescaling:quantile_transformer:output_distribution': 'uniform', 'categorical_encoding:one_hot_encoding:minimum_fraction': 0.008948798323602134, 'preprocessor:fast_ica:n_components': 1463},
dataset_properties={
  'task': 4,
  'sparse': False,
  'multilabel': False,
  'multiclass': False,
  'target_type': 'regression',
  'signed': False})),
]


--- STATISTICS: ---
auto-sklearn results:
  Dataset name: boston_housing
  Metric: r2
  Best validation score: 0.805540
  Number of target algorithm runs: 29
  Number of successful target algorithm runs: 21
  Number of crashed target algorithm runs: 0
  Number of target algorithms that exceeded the time limit: 7
  Number of target algorithms that exceeded the memory limit: 1



--- SCORE: ---
R2 score 0.8090295157449421
